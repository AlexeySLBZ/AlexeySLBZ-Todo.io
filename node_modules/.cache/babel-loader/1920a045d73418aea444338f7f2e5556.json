{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Turbo\\\\IdeaProjects\\\\todojs\\\\src\\\\Components\\\\Task.js\";\nimport React, { Component } from \"react\";\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport PropTypes from 'prop-types';\nexport default class Task extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onLabelChange = el => {\n      this.setState({\n        label: el.target.value\n      });\n    };\n\n    this.onSubmit = el => {\n      el.preventDefault();\n      const {\n        label\n      } = this.state;\n      this.setState({\n        label: ''\n      });\n      const cb = this.props.onLabelChange;\n      cb(this.props.id, label);\n    };\n  }\n\n  tick() {\n    console.log(\"tick\");\n    return formatDistanceToNow(this.props.time);\n  }\n\n  // componentDidMount() {\n  //     const {updateInterval} = this.props\n  //     this.timerID = setInterval(() => this.tick(), updateInterval)\n  // }\n  //\n  // componentWillUnmount() {\n  //     clearInterval(this.timerID)\n  // }\n  render() {\n    const {\n      label,\n      onDeleted,\n      onActiveCounter,\n      done,\n      checked,\n      editing,\n      onItemEditButton\n    } = this.props;\n    let classNames = \"\";\n\n    if (done) {\n      classNames += 'completed';\n    }\n\n    ;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classNames,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          onClick: onActiveCounter,\n          checked: checked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [editing ? /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.onSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"edit\",\n              onChange: this.onLabelChange,\n              autoFocus: true,\n              required: true,\n              placeholder: label,\n              value: label || label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"created\",\n            children: this.tick()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon icon-edit\",\n          onClick: onItemEditButton,\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"icon icon-destroy\",\n          onClick: onDeleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nTask.propTypes = {\n  onDeleted: PropTypes.func.isRequired,\n  onActiveCounter: PropTypes.func.isRequired,\n  checked: PropTypes.bool.isRequired,\n  done: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  classNames: PropTypes.string.isRequired\n};\n;","map":{"version":3,"sources":["C:/Users/Turbo/IdeaProjects/todojs/src/Components/Task.js"],"names":["React","Component","formatDistanceToNow","PropTypes","Task","onLabelChange","el","setState","label","target","value","onSubmit","preventDefault","state","cb","props","id","tick","console","log","time","render","onDeleted","onActiveCounter","done","checked","editing","onItemEditButton","classNames","propTypes","func","isRequired","bool","string"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\r\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Task extends Component{\r\n    static propTypes = {\r\n        onDeleted: PropTypes.func.isRequired,\r\n        onActiveCounter: PropTypes.func.isRequired,\r\n        checked: PropTypes.bool.isRequired,\r\n\r\n        done: PropTypes.bool.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        classNames: PropTypes.string.isRequired,\r\n    };\r\n    tick() {\r\n        console.log(\"tick\")\r\n         return formatDistanceToNow(this.props.time)\r\n\r\n    }\r\n\r\n    onLabelChange = (el) => {\r\n        this.setState({\r\n            label: el.target.value,\r\n        });\r\n    };\r\n\r\n    onSubmit = (el) => {\r\n        el.preventDefault();\r\n        const { label } = this.state;\r\n        this.setState({ label: '' });\r\n        const cb = this.props.onLabelChange;\r\n        cb(this.props.id, label);\r\n    };\r\n\r\n\r\n    // componentDidMount() {\r\n    //     const {updateInterval} = this.props\r\n    //     this.timerID = setInterval(() => this.tick(), updateInterval)\r\n    // }\r\n    //\r\n    // componentWillUnmount() {\r\n    //     clearInterval(this.timerID)\r\n    // }\r\n\r\n    render() {\r\n\r\n        const {label,  onDeleted, onActiveCounter, done, checked, editing, onItemEditButton} = this.props;\r\n        let classNames = \"\"\r\n        if (done) {\r\n            classNames += 'completed';\r\n        };\r\n\r\n        return (\r\n\r\n            <li className={classNames}>\r\n                <div className=\"view\">\r\n                    <input\r\n                        className=\"toggle\"\r\n                        type=\"checkbox\"\r\n                        onClick = {onActiveCounter}\r\n                        checked = {checked}\r\n                    />\r\n                    <label >\r\n                        {editing ? (\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"edit\"\r\n                                    onChange={this.onLabelChange}\r\n                                    autoFocus\r\n                                    required\r\n                                    placeholder={label}\r\n                                    value={label || label}\r\n                                />\r\n                            </form>\r\n                        ) : (\r\n                            <span className=\"description\">{label}</span>\r\n                        )}\r\n                        <span className=\"created\">{this.tick()}</span>\r\n                    </label>\r\n                    <button className=\"icon icon-edit\" onClick={onItemEditButton} type=\"submit\">\r\n\r\n                    </button>\r\n                    <button type ='button'\r\n                            className=\"icon icon-destroy\"\r\n                            onClick = {onDeleted}>\r\n\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        );\r\n    };\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}