{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Turbo\\\\IdeaProjects\\\\todojs\\\\src\\\\Components\\\\Task.js\";\nimport React from \"react\";\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\nexport default class Task extends React.Component {\n  tick() {\n    console.log(\"tick\");\n    return formatDistanceToNow(this.props.time);\n  } // componentDidMount() {\n  //     const {updateInterval} = this.props\n  //     this.timerID = setInterval(() => this.tick(), updateInterval)\n  // }\n  //\n  // componentWillUnmount() {\n  //     clearInterval(this.timerID)\n  // }\n\n\n  render() {\n    const {\n      label,\n      onDeleted,\n      onActiveCounter,\n      done,\n      checked\n    } = this.props;\n    let classNames = \"\";\n\n    if (done) {\n      classNames += 'completed';\n    }\n\n    ;\n    Task.defaultProps = {\n      onDeleted: onDeleted = () => {},\n      onActiveCounter: () => {}\n    }; //\n    //     Task.propTypes = {\n    //         updateInterval:(props,propName,componentName) => {\n    //         const value = props[propName];\n    //\n    //         if(typeof value == 'number' && !isNaN(value)){\n    //             return null;\n    //         }\n    //         return new TypeError(`${componentName}:${propName} must be number`)\n    //         }\n    // };\n\n    let classNamesCheckBox = \"toggle\";\n\n    if (done) {\n      classNamesCheckBox += '';\n    }\n\n    ;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classNames,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: classNamesCheckBox,\n          type: \"checkbox\",\n          onClick: onActiveCounter,\n          checked: checked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"created\",\n            children: this.tick()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon icon-edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"icon icon-destroy\",\n          onClick: onDeleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["C:/Users/Turbo/IdeaProjects/todojs/src/Components/Task.js"],"names":["React","formatDistanceToNow","Task","Component","tick","console","log","props","time","render","label","onDeleted","onActiveCounter","done","checked","classNames","defaultProps","classNamesCheckBox"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AAGA,eAAe,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAkC;AAE7CC,EAAAA,IAAI,GAAG;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACC,WAAOL,mBAAmB,CAAC,KAAKM,KAAL,CAAWC,IAAZ,CAA1B;AAEJ,GAN4C,CAW7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACC,MAAAA,KAAD;AAASC,MAAAA,SAAT;AAAoBC,MAAAA,eAApB;AAAqCC,MAAAA,IAArC;AAA2CC,MAAAA;AAA3C,QAAsD,KAAKP,KAAjE;AACA,QAAIQ,UAAU,GAAG,EAAjB;;AACA,QAAIF,IAAJ,EAAU;AACNE,MAAAA,UAAU,IAAI,WAAd;AACH;;AAAA;AACHb,IAAAA,IAAI,CAACc,YAAL,GAAoB;AACdL,MAAAA,SAAS,EAAEA,SAAS,GAAG,MAAO,CAAE,CADlB;AAEhBC,MAAAA,eAAe,EAAC,MAAM,CAAE;AAFR,KAApB,CAPO,CAWT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,QAAKK,kBAAkB,GAAG,QAA1B;;AACA,QAAIJ,IAAJ,EAAU;AACNI,MAAAA,kBAAkB,IAAI,EAAtB;AACH;;AAAA;AAED,wBAEI;AAAI,MAAA,SAAS,EAAEF,UAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AACI,UAAA,SAAS,EAAEE,kBADf;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,OAAO,EAAIL,eAHf;AAII,UAAA,OAAO,EAAGE;AAJd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAA,kCACI;AACI,YAAA,SAAS,EAAC,aADd;AAAA,sBAGGJ;AAHH;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAM,YAAA,SAAS,EAAC,SAAhB;AAAA,sBAA2B,KAAKN,IAAL;AAA3B;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAeI;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAgBI;AAAQ,UAAA,IAAI,EAAE,QAAd;AACQ,UAAA,SAAS,EAAC,mBADlB;AAEQ,UAAA,OAAO,EAAIO;AAFnB;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AA2BH;;AA3E4C;AA4EhD","sourcesContent":["import React from \"react\";\r\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow'\r\n\r\n\r\nexport default class Task extends React.Component{\r\n\r\n    tick() {\r\n        console.log(\"tick\")\r\n         return formatDistanceToNow(this.props.time)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    // componentDidMount() {\r\n    //     const {updateInterval} = this.props\r\n    //     this.timerID = setInterval(() => this.tick(), updateInterval)\r\n    // }\r\n    //\r\n    // componentWillUnmount() {\r\n    //     clearInterval(this.timerID)\r\n    // }\r\n\r\n    render() {\r\n\r\n        const {label,  onDeleted, onActiveCounter, done, checked} = this.props;\r\n        let classNames = \"\"\r\n        if (done) {\r\n            classNames += 'completed';\r\n        };\r\n      Task.defaultProps = {\r\n            onDeleted: onDeleted = () =>  {},\r\n          onActiveCounter:() => {}\r\n        };\r\n    //\r\n    //     Task.propTypes = {\r\n    //         updateInterval:(props,propName,componentName) => {\r\n    //         const value = props[propName];\r\n    //\r\n    //         if(typeof value == 'number' && !isNaN(value)){\r\n    //             return null;\r\n    //         }\r\n    //         return new TypeError(`${componentName}:${propName} must be number`)\r\n    //         }\r\n    // };\r\n\r\n        let  classNamesCheckBox = \"toggle\"\r\n        if (done) {\r\n            classNamesCheckBox += '';\r\n        };\r\n\r\n        return (\r\n\r\n            <li className={classNames}>\r\n                <div className=\"view\">\r\n                    <input\r\n                        className={classNamesCheckBox}\r\n                        type=\"checkbox\"\r\n                        onClick = {onActiveCounter}\r\n                        checked ={checked}\r\n                    />\r\n                    <label >\r\n                        <span\r\n                            className='description'\r\n                              >\r\n                          {label}\r\n                        </span>\r\n                        <span className=\"created\">{this.tick()}</span>\r\n                    </label>\r\n                    <button className=\"icon icon-edit\"></button>\r\n                    <button type ='button'\r\n                            className=\"icon icon-destroy\"\r\n                            onClick = {onDeleted}>\r\n\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        );\r\n    };\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}