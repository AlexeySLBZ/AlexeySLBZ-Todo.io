{"ast":null,"code":"import _classCallCheck from\"C:/Users/Turbo/IdeaProjects/todojs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Turbo/IdeaProjects/todojs/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/Turbo/IdeaProjects/todojs/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/Turbo/IdeaProjects/todojs/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";import formatDistanceToNow from'date-fns/formatDistanceToNow';var Task=/*#__PURE__*/function(_React$Component){_inherits(Task,_React$Component);var _super=_createSuper(Task);function Task(){var _this;_classCallCheck(this,Task);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={date:false};return _this;}_createClass(Task,[{key:\"tick\",value:function tick(){this.setState({date:formatDistanceToNow(this.props.time,{includeSeconds:true})});}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var updateInterval=this.props.updateInterval;this.timerID=setInterval(function(){return _this2.tick();},updateInterval);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(this.timerID);}},{key:\"render\",value:function render(){var _this$props=this.props,label=_this$props.label,onDeleted=_this$props.onDeleted,onActiveCounter=_this$props.onActiveCounter,done=_this$props.done;var classNames=\"\";if(done){classNames+='completed';};Task.defaultProps={updateInterval:2000};var classNamesCheckBox=\"toggle\";if(done){classNamesCheckBox+='  hidden';};return/*#__PURE__*/_jsx(\"li\",{className:classNames,children:/*#__PURE__*/_jsxs(\"div\",{className:\"view\",children:[/*#__PURE__*/_jsx(\"input\",{className:classNamesCheckBox,type:\"checkbox\",onClick:onActiveCounter}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"description\",children:label}),/*#__PURE__*/_jsx(\"span\",{className:\"created\",children:this.state.date})]}),/*#__PURE__*/_jsx(\"button\",{className:\"icon icon-edit\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"icon icon-destroy\",onClick:onDeleted})]})});}}]);return Task;}(React.Component);export{Task as default};;","map":{"version":3,"sources":["C:/Users/Turbo/IdeaProjects/todojs/src/Components/Task.js"],"names":["React","formatDistanceToNow","Task","state","date","setState","props","time","includeSeconds","updateInterval","timerID","setInterval","tick","clearInterval","label","onDeleted","onActiveCounter","done","classNames","defaultProps","classNamesCheckBox","Component"],"mappings":"4hBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,8BAAhC,C,GAGqBC,CAAAA,I,+TAKjBC,K,CAAQ,CACJC,IAAI,CAAE,KADF,C,mEAID,CACH,KAAKC,QAAL,CAAc,CAAED,IAAI,CAAEH,mBAAmB,CAAC,KAAKK,KAAL,CAAWC,IAAZ,CAAkB,CAAEC,cAAc,CAAE,IAAlB,CAAlB,CAA3B,CAAd,EACH,C,6DAEmB,oBACTC,CAAAA,cADS,CACS,KAAKH,KADd,CACTG,cADS,CAEhB,KAAKC,OAAL,CAAeC,WAAW,CAAC,iBAAM,CAAA,MAAI,CAACC,IAAL,EAAN,EAAD,CAAoBH,cAApB,CAA1B,CACH,C,mEAEsB,CACnBI,aAAa,CAAC,KAAKH,OAAN,CAAb,CACH,C,uCAEQ,iBAC8C,KAAKJ,KADnD,CACEQ,KADF,aACEA,KADF,CACUC,SADV,aACUA,SADV,CACqBC,eADrB,aACqBA,eADrB,CACsCC,IADtC,aACsCA,IADtC,CAEL,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAID,IAAJ,CAAU,CACNC,UAAU,EAAI,WAAd,CACH,EAEDhB,IAAI,CAACiB,YAAL,CAAoB,CAChBV,cAAc,CAAC,IADC,CAApB,CAeA,GAAKW,CAAAA,kBAAkB,CAAG,QAA1B,CACA,GAAIH,IAAJ,CAAU,CACNG,kBAAkB,EAAI,UAAtB,CACH,EAED,mBAEI,WAAI,SAAS,CAAEF,UAAf,uBACI,aAAK,SAAS,CAAC,MAAf,wBACI,cACI,SAAS,CAAEE,kBADf,CAEO,IAAI,CAAC,UAFZ,CAGO,OAAO,CAAIJ,eAHlB,EADJ,cAKI,sCACI,aACI,SAAS,CAAC,aADd,UAGGF,KAHH,EADJ,cAMI,aAAM,SAAS,CAAC,SAAhB,UAA2B,KAAKX,KAAL,CAAWC,IAAtC,EANJ,GALJ,cAaI,eAAQ,SAAS,CAAC,gBAAlB,EAbJ,cAcI,eAAQ,IAAI,CAAE,QAAd,CACQ,SAAS,CAAC,mBADlB,CAEQ,OAAO,CAAIW,SAFnB,EAdJ,GADJ,EAFJ,CAyBH,C,kBA1E6Bf,KAAK,CAACqB,S,SAAnBnB,I,aA2EpB","sourcesContent":["import React from \"react\";\r\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow'\r\n\r\n\r\nexport default class Task extends React.Component{\r\n\r\n\r\n\r\n\r\n    state = {\r\n        date: false,\r\n    }\r\n\r\n    tick() {\r\n        this.setState({ date: formatDistanceToNow(this.props.time, { includeSeconds: true })})\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {updateInterval} = this.props\r\n        this.timerID = setInterval(() => this.tick(), updateInterval)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID)\r\n    }\r\n\r\n    render() {\r\n        const {label,  onDeleted, onActiveCounter, done} = this.props;\r\n        let classNames = \"\"\r\n        if (done) {\r\n            classNames += 'completed';\r\n        };\r\n\r\n        Task.defaultProps = {\r\n            updateInterval:2000\r\n        };\r\n\r\n        Task.propTypes = {\r\n            updateInterval:(props,propName,componentName) => {\r\n            const value = props[propName];\r\n\r\n            if(typeof value == 'number' && !isNaN(value)){\r\n                return null;\r\n            }\r\n            return new TypeError(`${componentName}:${propName} must be number`)\r\n            }\r\n    };\r\n\r\n        let  classNamesCheckBox = \"toggle\"\r\n        if (done) {\r\n            classNamesCheckBox += '  hidden';\r\n        };\r\n\r\n        return (\r\n\r\n            <li className={classNames}>\r\n                <div className=\"view\">\r\n                    <input\r\n                        className={classNamesCheckBox}\r\n                           type=\"checkbox\"\r\n                           onClick = {onActiveCounter}/>\r\n                    <label >\r\n                        <span\r\n                            className='description'\r\n                              >\r\n                          {label}\r\n                        </span>\r\n                        <span className=\"created\">{this.state.date}</span>\r\n                    </label>\r\n                    <button className=\"icon icon-edit\"></button>\r\n                    <button type ='button'\r\n                            className=\"icon icon-destroy\"\r\n                            onClick = {onDeleted}>\r\n\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        );\r\n    };\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}