{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Turbo\\\\IdeaProjects\\\\todojs\\\\src\\\\Components\\\\App\\\\App.js\";\nimport React from 'react';\nimport NewTaskForm from \"../NewTaskForm\";\nimport './App.css';\nimport TaskList from \"../TaskList\";\nimport Footer from \"../Footer\";\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      todoData: [this.createTodoItem(\"Completed task1\"), this.createTodoItem(\"Completed task2\"), this.createTodoItem(\"Completed task3\")],\n      status: 'all'\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newItem = this.createTodoItem(text);\n      this.setState(({\n        todoData\n      }) => {\n        const newArr = [...todoData, newItem];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.onActiveCounter = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const oldItem = todoData[idx];\n        const newItem = { ...oldItem,\n          done: !oldItem.done\n        };\n        const newArray = [...todoData.slice(0, idx), newItem, ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.onAllVision = () => {\n      console.log(this.state.todoData);\n      return this.state.todoData;\n    };\n\n    this.onActiveVision = () => {\n      this.setState(({\n        todoData\n      }) => {\n        const newArray = todoData.map(el => {\n          if (el.done) {\n            el.shouldHide = !el.shouldHide;\n          }\n        });\n        console.log(\"Active completed\", newArray, {\n          todoData\n        });\n        return {\n          newArray\n        };\n      });\n    };\n\n    this.onCompletedVision = () => {\n      this.setState({\n        [shouldHide]: !shouldHide\n      });\n      this.setState(({\n        todoData\n      }) => {\n        const newArray = todoData.map(el => {\n          if (el.done) {\n            el.shouldHide = !el.shouldHide;\n          }\n        });\n        console.log(this.state);\n        console.log(\"vision completed\", newArray);\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.onClearCompleted = () => {\n      this.setState(({\n        todoData\n      }) => {\n        const newArray = todoData.filter(el => el.done === false);\n        console.log(\"clearCompleted\", newArray);\n        return {\n          todoData: newArray\n        };\n      });\n    };\n  }\n\n  createTodoItem(label) {\n    return {\n      label,\n      done: false,\n      id: this.maxId++,\n      shouldHide: false\n    };\n  }\n\n  // onFilterChange = (filter) => {\n  //     this.setState({filter});\n  // }\n  //\n  // filterToDos = (todos, filter) => {\n  //     if (filter === 'all'){\n  //         return todos;\n  //     }\n  //     if (filter === 'active'){\n  //         return todos.filter(todo => !todo.done)\n  //     }\n  //     if (filter === 'complete'){\n  //         return todos.filter(todo => todo.done)\n  //     }\n  // }\n  render() {\n    const {\n      todoData\n    } = this.state;\n    const doneItem = todoData.filter(el => el.done).length;\n    const activeItem = todoData.length - doneItem;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(NewTaskForm, {\n        activeItem: activeItem,\n        onItemAdd: this.addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        visible: this.filterToDos,\n        todos: todoData,\n        onDeletedId: this.deleteItem,\n        onActiveCounter: this.onActiveCounter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        activeItem: activeItem,\n        onClearCompleted: this.onClearCompleted,\n        onActiveVision: this.onActiveVision,\n        onAllVision: this.onAllVision,\n        onCompletedVision: this.onCompletedVision\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["C:/Users/Turbo/IdeaProjects/todojs/src/Components/App/App.js"],"names":["React","NewTaskForm","TaskList","Footer","App","Component","maxId","state","todoData","createTodoItem","status","deleteItem","id","setState","idx","findIndex","el","newArray","slice","addItem","text","newItem","newArr","onActiveCounter","oldItem","done","onAllVision","console","log","onActiveVision","map","shouldHide","onCompletedVision","onClearCompleted","filter","label","render","doneItem","length","activeItem","filterToDos"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport NewTaskForm from \"../NewTaskForm\";\r\n\r\nimport './App.css'\r\nimport TaskList from \"../TaskList\";\r\nimport Footer from \"../Footer\";\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n\r\n    maxId = 100;\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem(\"Completed task1\"),\r\n            this.createTodoItem(\"Completed task2\"),\r\n            this.createTodoItem(\"Completed task3\"),\r\n        ],\r\n        status: 'all',\r\n\r\n    };\r\n\r\n    createTodoItem (label) {\r\n        return {\r\n            label,\r\n            done: false,\r\n            id: this.maxId++,\r\n            shouldHide:false,\r\n        };\r\n    };\r\n\r\n    deleteItem = (id) =>{\r\n\r\n        this.setState(({todoData})=>{\r\n\r\n            const idx = todoData.findIndex((el)=>el.id===id);\r\n            const newArray = [...todoData.slice(0,idx),...todoData.slice(idx+1)];\r\n           return {\r\n               todoData:newArray\r\n           };\r\n\r\n        });\r\n\r\n    };\r\n\r\n    addItem = (text)=>{\r\n         const newItem = this.createTodoItem(text);\r\n\r\n         this.setState(({todoData})=>{\r\n            const newArr = [\r\n                ...todoData,\r\n                newItem\r\n             ];\r\n             return {todoData: newArr}\r\n\r\n         });\r\n    };\r\n\r\n    onActiveCounter = (id) => {\r\n\r\n        this.setState(({ todoData })=>{\r\n            const idx = todoData.findIndex((el)=>el.id===id);\r\n\r\n            const oldItem = todoData[idx];\r\n            const newItem = {...oldItem,\r\n                done:!oldItem.done};\r\n\r\n            const newArray = [...todoData.slice(0,idx),\r\n                newItem,\r\n                ...todoData.slice(idx+1)\r\n            ];\r\n           \r\n            return {\r\n                todoData:newArray\r\n            };\r\n        });\r\n\r\n    };\r\n\r\n    onAllVision = () => {\r\n\r\n            console.log(this.state.todoData)\r\n\r\n            return (this.state.todoData);\r\n\r\n    };\r\n\r\n    onActiveVision = () => {\r\n\r\n        this.setState(({ todoData })=>{\r\n            const newArray = todoData.map((el)=> {\r\n                if (el.done) {\r\n                    el.shouldHide=!el.shouldHide\r\n                }\r\n            });\r\n\r\n            console.log(\"Active completed\", newArray, { todoData })\r\n            return {\r\n                newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    onCompletedVision = () => {\r\n        this.setState({ [shouldHide]:!shouldHide });\r\n        this.setState(({ todoData })=>{\r\n\r\n            const newArray = todoData.map((el)=> {\r\n                if (el.done) {\r\n                   el.shouldHide=!el.shouldHide\r\n                }\r\n            });\r\n\r\n            console.log(this.state)\r\n            console.log(\"vision completed\", newArray)\r\n            return {\r\n                todoData:newArray\r\n            };\r\n        });\r\n\r\n    };\r\n\r\n    onClearCompleted = () => {\r\n        this.setState(({todoData})=> {\r\n            const newArray = todoData.filter(el => el.done === false);\r\n            console.log(\"clearCompleted\", newArray)\r\n            return ({todoData: newArray});\r\n        });\r\n    };\r\n\r\n    // onFilterChange = (filter) => {\r\n    //     this.setState({filter});\r\n    // }\r\n    //\r\n    // filterToDos = (todos, filter) => {\r\n    //     if (filter === 'all'){\r\n    //         return todos;\r\n    //     }\r\n    //     if (filter === 'active'){\r\n    //         return todos.filter(todo => !todo.done)\r\n    //     }\r\n    //     if (filter === 'complete'){\r\n    //         return todos.filter(todo => todo.done)\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n\r\n        const { todoData } = this.state;\r\n        const doneItem = todoData.filter((el)=> el.done).length;\r\n        const activeItem = todoData.length-doneItem;\r\n\r\n        return(\r\n            <section className=\"todoapp\">\r\n                <NewTaskForm\r\n                    activeItem={activeItem}\r\n                    onItemAdd = {this.addItem}/>\r\n                <TaskList\r\n                    visible = {this.filterToDos}\r\n                    todos = {todoData}\r\n                    onDeletedId={this.deleteItem}\r\n                    onActiveCounter={this.onActiveCounter}/>\r\n                <Footer\r\n                    activeItem={activeItem}\r\n                    onClearCompleted={this.onClearCompleted}\r\n                    onActiveVision={this.onActiveVision}\r\n                    onAllVision={this.onAllVision}\r\n                    onCompletedVision={this.onCompletedVision}/>\r\n            </section>\r\n        );\r\n    };\r\n\r\n};"]},"metadata":{},"sourceType":"module"}