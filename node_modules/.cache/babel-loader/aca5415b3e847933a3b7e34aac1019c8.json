{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Turbo\\\\IdeaProjects\\\\todojs\\\\src\\\\Components\\\\Task.js\";\nimport React from \"react\";\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\n\nfunction tick() {\n  this.setState({\n    date: formatDistanceToNow(this.props.time)\n  });\n  console.log(\"tick\");\n}\n\nexport default class Task extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      date: false\n    };\n  }\n\n  // componentDidMount() {\n  //     const {updateInterval} = this.props\n  //     this.timerID = setInterval(() => this.tick(), updateInterval)\n  // }\n  //\n  // componentWillUnmount() {\n  //     clearInterval(this.timerID)\n  // }\n  render() {\n    const {\n      label,\n      onDeleted,\n      onActiveCounter,\n      done\n    } = this.props;\n    let classNames = \"\";\n\n    if (done) {\n      classNames += 'completed';\n    }\n\n    ; //     Task.defaultProps = {\n    //         updateInterval:2000\n    //     };\n    //\n    //     Task.propTypes = {\n    //         updateInterval:(props,propName,componentName) => {\n    //         const value = props[propName];\n    //\n    //         if(typeof value == 'number' && !isNaN(value)){\n    //             return null;\n    //         }\n    //         return new TypeError(`${componentName}:${propName} must be number`)\n    //         }\n    // };\n\n    let classNamesCheckBox = \"toggle\";\n\n    if (done) {\n      classNamesCheckBox += ' ';\n    }\n\n    ;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classNames,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: classNamesCheckBox,\n          type: \"checkbox\",\n          onClick: onActiveCounter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"created\",\n            children: tick()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon icon-edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"icon icon-destroy\",\n          onClick: onDeleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["C:/Users/Turbo/IdeaProjects/todojs/src/Components/Task.js"],"names":["React","formatDistanceToNow","tick","setState","date","props","time","console","log","Task","Component","state","render","label","onDeleted","onActiveCounter","done","classNames","classNamesCheckBox"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;;AACA,SAASC,IAAT,GAAgB;AACZ,OAAKC,QAAL,CAAc;AAAEC,IAAAA,IAAI,EAAEH,mBAAmB,CAAC,KAAKI,KAAL,CAAWC,IAAZ;AAA3B,GAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;;AAGD,eAAe,MAAMC,IAAN,SAAmBT,KAAK,CAACU,SAAzB,CAAkC;AAAA;AAAA;AAAA,SAK7CC,KAL6C,GAKrC;AACJP,MAAAA,IAAI,EAAE;AADF,KALqC;AAAA;;AAY7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAQ,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACC,MAAAA,KAAD;AAASC,MAAAA,SAAT;AAAoBC,MAAAA,eAApB;AAAqCC,MAAAA;AAArC,QAA6C,KAAKX,KAAxD;AACA,QAAIY,UAAU,GAAG,EAAjB;;AACA,QAAID,IAAJ,EAAU;AACNC,MAAAA,UAAU,IAAI,WAAd;AACH;;AAAA,KANI,CAQT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,QAAKC,kBAAkB,GAAG,QAA1B;;AACA,QAAIF,IAAJ,EAAU;AACNE,MAAAA,kBAAkB,IAAI,GAAtB;AACH;;AAAA;AAED,wBAEI;AAAI,MAAA,SAAS,EAAED,UAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AACI,UAAA,SAAS,EAAEC,kBADf;AAEO,UAAA,IAAI,EAAC,UAFZ;AAGO,UAAA,OAAO,EAAIH;AAHlB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA,kCACI;AACI,YAAA,SAAS,EAAC,aADd;AAAA,sBAGGF;AAHH;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAM,YAAA,SAAS,EAAC,SAAhB;AAAA,sBAA2BX,IAAI;AAA/B;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAaI;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAcI;AAAQ,UAAA,IAAI,EAAE,QAAd;AACQ,UAAA,SAAS,EAAC,mBADlB;AAEQ,UAAA,OAAO,EAAIY;AAFnB;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAyBH;;AA1E4C;AA2EhD","sourcesContent":["import React from \"react\";\r\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow'\r\nfunction tick() {\r\n    this.setState({ date: formatDistanceToNow(this.props.time)})\r\n    console.log(\"tick\")\r\n}\r\n\r\n\r\nexport default class Task extends React.Component{\r\n\r\n\r\n\r\n\r\n    state = {\r\n        date: false,\r\n    }\r\n\r\n\r\n\r\n\r\n    // componentDidMount() {\r\n    //     const {updateInterval} = this.props\r\n    //     this.timerID = setInterval(() => this.tick(), updateInterval)\r\n    // }\r\n    //\r\n    // componentWillUnmount() {\r\n    //     clearInterval(this.timerID)\r\n    // }\r\n\r\n    render() {\r\n\r\n        const {label,  onDeleted, onActiveCounter, done} = this.props;\r\n        let classNames = \"\"\r\n        if (done) {\r\n            classNames += 'completed';\r\n        };\r\n\r\n    //     Task.defaultProps = {\r\n    //         updateInterval:2000\r\n    //     };\r\n    //\r\n    //     Task.propTypes = {\r\n    //         updateInterval:(props,propName,componentName) => {\r\n    //         const value = props[propName];\r\n    //\r\n    //         if(typeof value == 'number' && !isNaN(value)){\r\n    //             return null;\r\n    //         }\r\n    //         return new TypeError(`${componentName}:${propName} must be number`)\r\n    //         }\r\n    // };\r\n\r\n        let  classNamesCheckBox = \"toggle\"\r\n        if (done) {\r\n            classNamesCheckBox += ' ';\r\n        };\r\n\r\n        return (\r\n\r\n            <li className={classNames}>\r\n                <div className=\"view\">\r\n                    <input\r\n                        className={classNamesCheckBox}\r\n                           type=\"checkbox\"\r\n                           onClick = {onActiveCounter}/>\r\n                    <label >\r\n                        <span\r\n                            className='description'\r\n                              >\r\n                          {label}\r\n                        </span>\r\n                        <span className=\"created\">{tick()}</span>\r\n                    </label>\r\n                    <button className=\"icon icon-edit\"></button>\r\n                    <button type ='button'\r\n                            className=\"icon icon-destroy\"\r\n                            onClick = {onDeleted}>\r\n\r\n                    </button>\r\n                </div>\r\n            </li>\r\n        );\r\n    };\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}