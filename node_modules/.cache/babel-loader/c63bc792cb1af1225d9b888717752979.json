{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Turbo\\\\IdeaProjects\\\\todojs\\\\src\\\\Components\\\\App\\\\App.js\";\nimport React from 'react';\nimport NewTaskForm from \"../NewTaskForm\";\nimport './App.css';\nimport TaskList from \"../TaskList\";\nimport Footer from \"../Footer\";\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      todoData: [this.createTodoItem(\"Completed task1\"), this.createTodoItem(\"Completed task2\"), this.createTodoItem(\"Completed task3\")],\n      filter: 'all'\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newItem = this.createTodoItem(text);\n      this.setState(({\n        todoData\n      }) => {\n        const newArr = [...todoData, newItem];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.onItemEditButton = id => {\n      this.setState(state => {\n        const items = this.onEditToggle(id);\n        return {\n          items\n        };\n      });\n    };\n\n    this.onLabelChange = (id, label) => {\n      this.onItemEditButton(id);\n      this.setState(state => {\n        const element = state.todoData.findIndex(el => el.id === id);\n        const item = { ...state.todoData[element],\n          label\n        };\n        const items = [...state.todoData.slice(0, element), item, ...state.todoData.slice(element + 1)];\n        return {\n          items\n        };\n      });\n    };\n\n    this.onActiveCounter = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const oldItem = todoData[idx];\n        const newItem = { ...oldItem,\n          done: !oldItem.done,\n          checked: !oldItem.checked\n        };\n        const newArray = [...todoData.slice(0, idx), newItem, ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.onEditToggle = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const oldItem = todoData[idx];\n        const newItem = { ...oldItem,\n          editing: !oldItem.editing\n        };\n        const newArray = [...todoData.slice(0, idx), newItem, ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.onClearCompleted = () => {\n      this.setState(({\n        todoData\n      }) => {\n        const newArray = todoData.filter(el => el.done === false);\n        console.log(\"clearCompleted\", newArray);\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.onFilterChange = filter => {\n      this.setState({\n        filter\n      });\n      console.log(\"filter\", filter);\n    };\n\n    this.filterToDos = (todos, filter) => {\n      if (filter === 'all') {\n        return todos;\n      }\n\n      if (filter === 'active') {\n        return todos.filter(todo => !todo.done);\n      }\n\n      if (filter === 'completed') {\n        return todos.filter(todo => todo.done);\n      }\n    };\n  }\n\n  createTodoItem(label) {\n    return {\n      label,\n      done: false,\n      id: this.maxId++,\n      time: Date.now(),\n      checked: false,\n      editing: false\n    };\n  }\n\n  render() {\n    const {\n      todoData,\n      filter,\n      time\n    } = this.state;\n    const visibleItems = this.filterToDos(todoData, filter);\n    const doneItem = todoData.filter(el => el.done).length;\n    const activeItem = todoData.length - doneItem;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(NewTaskForm, {\n        activeItem: activeItem,\n        onItemAdd: this.addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        time: time,\n        todos: visibleItems,\n        onDeletedId: this.deleteItem,\n        onActiveCounter: this.onActiveCounter,\n        onLabelChange: this.onLabelChange,\n        onItemEditButton: this.onItemEditButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        filter: filter,\n        activeItem: activeItem,\n        onClearCompleted: this.onClearCompleted,\n        onFilterChange: this.onFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["C:/Users/Turbo/IdeaProjects/todojs/src/Components/App/App.js"],"names":["React","NewTaskForm","TaskList","Footer","App","Component","maxId","state","todoData","createTodoItem","filter","deleteItem","id","setState","idx","findIndex","el","newArray","slice","addItem","text","newItem","newArr","onItemEditButton","items","onEditToggle","onLabelChange","label","element","item","onActiveCounter","oldItem","done","checked","editing","onClearCompleted","console","log","onFilterChange","filterToDos","todos","todo","time","Date","now","render","visibleItems","doneItem","length","activeItem"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport NewTaskForm from \"../NewTaskForm\";\r\n\r\nimport './App.css'\r\nimport TaskList from \"../TaskList\";\r\nimport Footer from \"../Footer\";\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n    maxId = 100;\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem(\"Completed task1\"),\r\n            this.createTodoItem(\"Completed task2\"),\r\n            this.createTodoItem(\"Completed task3\"),\r\n        ],\r\n        filter: 'all',\r\n    };\r\n\r\n    createTodoItem (label) {\r\n        return {\r\n            label,\r\n            done: false,\r\n            id: this.maxId++,\r\n            time: Date.now(),\r\n            checked: false,\r\n            editing: false\r\n        };\r\n    };\r\n\r\n    deleteItem = (id) =>{\r\n\r\n        this.setState(({todoData})=>{\r\n\r\n            const idx = todoData.findIndex((el)=>el.id===id);\r\n            const newArray = [...todoData.slice(0,idx),...todoData.slice(idx+1)];\r\n           return {\r\n               todoData:newArray\r\n           };\r\n\r\n        });\r\n\r\n    };\r\n\r\n    addItem = (text)=>{\r\n         const newItem = this.createTodoItem(text);\r\n\r\n         this.setState(({todoData})=>{\r\n            const newArr = [\r\n                ...todoData,\r\n                newItem\r\n            ];\r\n             return {todoData: newArr}\r\n\r\n         });\r\n    };\r\n\r\n    onItemEditButton = (id) => {\r\n        this.setState((state) => {\r\n            const items = this.onEditToggle(id);\r\n            return { items };\r\n        });\r\n    };\r\n\r\n    onLabelChange = (id, label) => {\r\n        this.onItemEditButton(id);\r\n        this.setState((state) => {\r\n            const element = state.todoData.findIndex((el) => el.id === id);\r\n            const item = { ...state.todoData[element], label };\r\n            const items = [...state.todoData.slice(0, element), item, ...state.todoData.slice(element + 1)];\r\n            return { items };\r\n        });\r\n    };\r\n\r\n    onActiveCounter = (id) => {\r\n\r\n        this.setState(({ todoData })=>{\r\n            const idx = todoData.findIndex((el)=>el.id===id);\r\n\r\n            const oldItem = todoData[idx];\r\n            const newItem = {\r\n                ...oldItem,\r\n                done: !oldItem.done,\r\n                checked: !oldItem.checked,\r\n\r\n            };\r\n\r\n\r\n            const newArray = [...todoData.slice(0,idx),\r\n                newItem,\r\n                ...todoData.slice(idx+1)\r\n            ];\r\n\r\n            return {\r\n                todoData:newArray\r\n            };\r\n        });\r\n\r\n    };\r\n\r\n    onEditToggle = (id) => {\r\n\r\n        this.setState(({ todoData })=>{\r\n            const idx = todoData.findIndex((el)=>el.id===id);\r\n\r\n            const oldItem = todoData[idx];\r\n            const newItem = {\r\n                ...oldItem,\r\n                editing: !oldItem.editing,\r\n            };\r\n\r\n            const newArray = [...todoData.slice(0,idx),\r\n                newItem,\r\n                ...todoData.slice(idx+1)\r\n            ];\r\n\r\n            return {\r\n                todoData:newArray\r\n            };\r\n        });\r\n\r\n    };\r\n\r\n    onClearCompleted = () => {\r\n        this.setState(({todoData})=> {\r\n            const newArray = todoData.filter(el => el.done === false);\r\n            console.log(\"clearCompleted\", newArray)\r\n            return ({todoData: newArray});\r\n        });\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({filter});\r\n        console.log(\"filter\",filter)\r\n\r\n    }\r\n\r\n    filterToDos = (todos, filter) => {\r\n        if (filter === 'all'){\r\n            return todos;\r\n        }\r\n        if (filter === 'active'){\r\n            return todos.filter(todo => !todo.done)\r\n        }\r\n        if (filter === 'completed'){\r\n            return todos.filter(todo => todo.done)\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { todoData, filter, time } = this.state;\r\n        const visibleItems = this.filterToDos(todoData, filter)\r\n        const doneItem = todoData.filter((el)=> el.done).length;\r\n        const activeItem = todoData.length-doneItem;\r\n\r\n        return(\r\n            <section className=\"todoapp\">\r\n                <NewTaskForm\r\n                    activeItem={activeItem}\r\n                    onItemAdd = {this.addItem}/>\r\n                <TaskList\r\n                    time={time}\r\n                    todos = {visibleItems}\r\n                    onDeletedId={this.deleteItem}\r\n                    onActiveCounter={this.onActiveCounter}\r\n                    onLabelChange={this.onLabelChange}\r\n                    onItemEditButton={this.onItemEditButton}/>\r\n\r\n\r\n\r\n\r\n                <Footer\r\n                    filter = {filter}\r\n                    activeItem={activeItem}\r\n                    onClearCompleted={this.onClearCompleted}\r\n                    onFilterChange={this.onFilterChange}/>\r\n            </section>\r\n        );\r\n    };\r\n\r\n};"]},"metadata":{},"sourceType":"module"}