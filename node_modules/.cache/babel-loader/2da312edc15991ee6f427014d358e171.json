{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Turbo\\\\IdeaProjects\\\\todojs\\\\src\\\\Components\\\\App\\\\App.js\";\nimport React from 'react';\nimport NewTaskForm from \"../NewTaskForm\";\nimport './App.css';\nimport TaskList from \"../TaskList\";\nimport Footer from \"../Footer\";\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      todoData: [],\n      filter: 'all'\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newItem = this.createTodoItem(text);\n      this.setState(({\n        todoData\n      }) => {\n        const newArr = [...todoData, newItem];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.editItem = () => {\n      console.log(\"XYN\"); // this.setState({\n      //     label: e.target.value\n      // });\n    };\n\n    this.onActiveCounter = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const oldItem = todoData[idx];\n        const newItem = { ...oldItem,\n          done: !oldItem.done,\n          checked: !oldItem.checked\n        };\n        const newArray = [...todoData.slice(0, idx), newItem, ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.onClearCompleted = () => {\n      this.setState(({\n        todoData\n      }) => {\n        const newArray = todoData.filter(el => el.done === false);\n        console.log(\"clearCompleted\", newArray);\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.onFilterChange = filter => {\n      this.setState({\n        filter\n      });\n      console.log(\"filter\", filter);\n    };\n\n    this.filterToDos = (todos, filter) => {\n      if (filter === 'all') {\n        return todos;\n      }\n\n      if (filter === 'active') {\n        return todos.filter(todo => !todo.done);\n      }\n\n      if (filter === 'completed') {\n        return todos.filter(todo => todo.done);\n      }\n    };\n  }\n\n  createTodoItem(label) {\n    return {\n      label,\n      done: false,\n      id: this.maxId++,\n      time: Date.now(),\n      checked: false\n    };\n  }\n\n  render() {\n    const {\n      todoData,\n      filter,\n      time\n    } = this.state;\n    const visibleItems = this.filterToDos(todoData, filter);\n    const doneItem = todoData.filter(el => el.done).length;\n    const activeItem = todoData.length - doneItem;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(NewTaskForm, {\n        activeItem: activeItem,\n        onItemAdd: this.addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        time: time,\n        todos: visibleItems,\n        onDeletedId: this.deleteItem,\n        onActiveCounter: this.onActiveCounter,\n        onEditItem: this.editItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        filter: filter,\n        activeItem: activeItem,\n        onClearCompleted: this.onClearCompleted,\n        onFilterChange: this.onFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["C:/Users/Turbo/IdeaProjects/todojs/src/Components/App/App.js"],"names":["React","NewTaskForm","TaskList","Footer","App","Component","maxId","state","todoData","filter","deleteItem","id","setState","idx","findIndex","el","newArray","slice","addItem","text","newItem","createTodoItem","newArr","editItem","console","log","onActiveCounter","oldItem","done","checked","onClearCompleted","onFilterChange","filterToDos","todos","todo","label","time","Date","now","render","visibleItems","doneItem","length","activeItem"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport NewTaskForm from \"../NewTaskForm\";\r\n\r\nimport './App.css'\r\nimport TaskList from \"../TaskList\";\r\nimport Footer from \"../Footer\";\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n    maxId = 100;\r\n    state = {\r\n        todoData: [\r\n\r\n        ],\r\n        filter: 'all',\r\n    };\r\n\r\n    createTodoItem (label) {\r\n        return {\r\n            label,\r\n            done: false,\r\n            id: this.maxId++,\r\n            time: Date.now(),\r\n            checked: false,\r\n        };\r\n    };\r\n\r\n    deleteItem = (id) =>{\r\n\r\n        this.setState(({todoData})=>{\r\n\r\n            const idx = todoData.findIndex((el)=>el.id===id);\r\n            const newArray = [...todoData.slice(0,idx),...todoData.slice(idx+1)];\r\n           return {\r\n               todoData:newArray\r\n           };\r\n\r\n        });\r\n\r\n    };\r\n\r\n    addItem = (text)=>{\r\n         const newItem = this.createTodoItem(text);\r\n\r\n         this.setState(({todoData})=>{\r\n            const newArr = [\r\n                ...todoData,\r\n                newItem\r\n            ];\r\n             return {todoData: newArr}\r\n\r\n         });\r\n    };\r\n\r\n    editItem = ()=>{\r\n        console.log (\"XYN\")\r\n        // this.setState({\r\n        //     label: e.target.value\r\n        // });\r\n    };\r\n\r\n    // onSubmit = (e) => {\r\n    //\r\n    //     e.preventDefault()\r\n    //     this.props.onItemAdd(this.state.label)\r\n    //     this.setState({\r\n    //         label:''\r\n    //     })\r\n    //\r\n    // };\r\n\r\n    onActiveCounter = (id) => {\r\n\r\n        this.setState(({ todoData })=>{\r\n            const idx = todoData.findIndex((el)=>el.id===id);\r\n\r\n            const oldItem = todoData[idx];\r\n            const newItem = {\r\n                ...oldItem,\r\n                done: !oldItem.done,\r\n                checked: !oldItem.checked,\r\n            };\r\n\r\n            const newArray = [...todoData.slice(0,idx),\r\n                newItem,\r\n                ...todoData.slice(idx+1)\r\n            ];\r\n\r\n            return {\r\n                todoData:newArray\r\n            };\r\n        });\r\n\r\n    };\r\n\r\n\r\n    onClearCompleted = () => {\r\n        this.setState(({todoData})=> {\r\n            const newArray = todoData.filter(el => el.done === false);\r\n            console.log(\"clearCompleted\", newArray)\r\n            return ({todoData: newArray});\r\n        });\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({filter});\r\n        console.log(\"filter\",filter)\r\n\r\n    }\r\n\r\n    filterToDos = (todos, filter) => {\r\n        if (filter === 'all'){\r\n            return todos;\r\n        }\r\n        if (filter === 'active'){\r\n            return todos.filter(todo => !todo.done)\r\n        }\r\n        if (filter === 'completed'){\r\n            return todos.filter(todo => todo.done)\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { todoData, filter, time } = this.state;\r\n        const visibleItems = this.filterToDos(todoData, filter)\r\n        const doneItem = todoData.filter((el)=> el.done).length;\r\n        const activeItem = todoData.length-doneItem;\r\n\r\n        return(\r\n            <section className=\"todoapp\">\r\n                <NewTaskForm\r\n                    activeItem={activeItem}\r\n                    onItemAdd = {this.addItem}/>\r\n                <TaskList\r\n                    time={time}\r\n                    todos = {visibleItems}\r\n                    onDeletedId={this.deleteItem}\r\n                    onActiveCounter={this.onActiveCounter}\r\n                    onEditItem={this.editItem}/>\r\n\r\n\r\n\r\n\r\n                <Footer\r\n                    filter = {filter}\r\n                    activeItem={activeItem}\r\n                    onClearCompleted={this.onClearCompleted}\r\n                    onFilterChange={this.onFilterChange}/>\r\n            </section>\r\n        );\r\n    };\r\n\r\n};"]},"metadata":{},"sourceType":"module"}